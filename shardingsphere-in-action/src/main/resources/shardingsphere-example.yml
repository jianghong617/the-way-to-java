#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

spring:
    main:
        banner-mode: 'off'
    shardingsphere:
        database:
            name: foo_db
        datasource:
            ds0:
                type: org.apache.shardingsphere.test.mock.MockedDataSource
            ds1:
                type: org.apache.shardingsphere.test.mock.MockedDataSource
            names: ds${0..1}
        props:
            kernel-executor-size: 10
            sql-show: true
        rules:
            encrypt:
                encryptors:
                    aesEncryptor:
                        props:
                            aes-key-value: 123456
                        type: AES
                tables:
                    t_order:
                        columns:
                            pwd:
                                assisted-query-column: pwd_assisted_query_cipher
                                cipher-column: pwd_cipher
                                encryptor-name: aesEncryptor
                                plain-column: pwd_plain
            readwrite-splitting:
                data-sources:
                    readwrite_ds:
                        load-balancer-name: random
                        props:
                            read-data-source-names: read_ds_0,read_ds_1
                            write-data-source-name: write_ds
                        type: Static
                load-balancers:
                    random:
                        type: RANDOM
            shadow:
                data-sources:
                    shadow-data-source:
                        shadow-data-source-name: ds-shadow
                        source-data-source-name: ds
                shadow-algorithms:
                    order-id-match-algorithm:
                        props:
                            column: user_id
                            operation: update
                            regex: '[1]'
                        type: REGEX_MATCH
                    simple-hint-algorithm:
                        props:
                            foo: bar
                            shadow: true
                        type: SIMPLE_HINT
                    user-id-match-algorithm:
                        props:
                            column: user_id
                            operation: insert
                            regex: '[1]'
                        type: REGEX_MATCH
                tables:
                    t_order:
                        data-source-names: shadow-data-source
                        shadow-algorithm-names: user-id-match-algorithm,order-id-match-algorithm,simple-hint-algorithm
                    t_user:
                        data-source-names: shadow-data-source
                        shadow-algorithm-names: simple-hint-algorithm
            sharding:
                default-sharding-column: user_id
                sharding-algorithms:
                    databaseShardingAlgorithm:
                        props:
                            algorithm-expression: ds$->{user_id % 2}
                        type: INLINE
                    orderTableShardingAlgorithm:
                        props:
                            algorithm-expression: t_order_$->{order_id % 2}
                        type: INLINE
                tables:
                    t_order:
                        actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}
                        database-strategy:
                            standard:
                                sharding-algorithm-name: databaseShardingAlgorithm
                                sharding-column: user_id
                        table-strategy:
                            standard:
                                sharding-algorithm-name: orderTableShardingAlgorithm
                                sharding-column: order_id
            sql-parser:
                parse-tree-cache:
                    initial-capacity: 1024
                    maximum-size: 1024
                sql-comment-parse-enabled: true
                sql-statement-cache:
                    initial-capacity: 1024
                    maximum-size: 1024
