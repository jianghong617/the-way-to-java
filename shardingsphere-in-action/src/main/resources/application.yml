server:
  port: 9527

# @see https://juejin.cn/post/7102345601798373407
spring:
  application:
    name: "shardingsphere-in-action"
  profiles:
    active: dev
  shardingsphere:
    mode:
      type: memory
    datasource:
      names: write-ds-0,write-ds-0-read-0
      write-ds-0:
        type: "com.zaxxer.hikari.HikariDataSource"
        driver-class-name: "com.mysql.cj.jdbc.Driver"
        url: "jdbc:mysql://${local.config.mysql.ds0.host}:${local.config.mysql.ds0.port}/${local.config.mysql.ds0.database}?useUnicode=true&useSSL=false&autoReconnect=true&characterEncoding=UTF-8"
        username: ${local.config.mysql.ds0.username}
        password: ${local.config.mysql.ds0.password}
      write-ds-0-read-0:
        type: "com.zaxxer.hikari.HikariDataSource"
        driver-class-name: "com.mysql.cj.jdbc.Driver"
        url: "jdbc:mysql://${local.config.mysql.ds1.host}:${local.config.mysql.ds1.port}/${local.config.mysql.ds1.database}?useUnicode=true&useSSL=false&autoReconnect=true&characterEncoding=UTF-8"
        username: ${local.config.mysql.ds1.username}
        password: ${local.config.mysql.ds1.password}
    props:
      kernel-executor-size: 10
      sql-show: true
    rules:
      readwrite-splitting:
        data-sources:
          ds-0:
            load-balancer-name: random
            props:
              read-data-source-names: write-ds-0-read-0
              write-data-source-name: write-ds-0
            type: Static
        load-balancers:
          random:
            type: RANDOM
      sharding:
        binding-tables:
          - user
        sharding-algorithms:
          userTableShardingAlgorithm:
            type: INLINE
            props:
              algorithm-expression: user_$->{id % 2}
        tables:
          user:
            #actual-data-nodes: ds$->{0..1}.user_$->{0..1}
            actual-data-nodes: ds-0.user_$->{0..1}
            table-strategy:
              standard:
                sharding-algorithm-name: userTableShardingAlgorithm
                sharding-column: id
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
        key-generators:
          snowflake:
            type: SNOWFLAKE

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.phptowey.shardingsphere.in.action.domain

logging:
  pattern:
    console: '%red(%d{yyyy-MM-dd HH:mm:ss.SSS}) %red([${spring.application.name}]) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger) - %cyan(%msg%n)'